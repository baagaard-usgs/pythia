# -*- Python -*-

def template():
    from pyre.schedulers import BatchScriptTemplate

    class PBSBatchScriptTemplate(BatchScriptTemplate):

        def __init__(self):
            BatchScriptTemplate.__init__(self, "pbs")

        def render(self):
            from StringIO import StringIO

            out = StringIO()
            scheduler = self.scheduler
            job = self.job

            out.write("#!%s\n" % scheduler.shell)
            out.write("#PBS -S %s\n" % scheduler.shell)
            out.write("#PBS -N %s\n" % job.task)
            if job.queue:
                out.write("#PBS -q %s\n" % job.queue)
            if job.stdout:
                out.write("#PBS -o %s\n" % job.stdout)
            if job.stderr:
                out.write("#PBS -e %s\n" % job.stderr)
            if job.resourceList:
                out.write("#PBS -l %s\n" % ','.join(job.resourceList))
            for option in scheduler.qsubOptions:
                out.write("#PBS %s\n" % option)
            out.write("\n")
            out.write("cd $PBS_O_WORKDIR\n")
            out.write("%s %s\n" % (job.executable, ' '.join(job.arguments)))
            out.write("\n")
            if job.comments:
                out.write("# ~~~~ comments ~~~~\n")
                for line in job.comments:
                    out.write("# %s\n" % line)
            out.write("\n")
            out.write("# ~~~~ submit command ~~~~\n")
            out.write("# %s < [script]\n" % scheduler.command)

            return out.getvalue()

    return PBSBatchScriptTemplate()
